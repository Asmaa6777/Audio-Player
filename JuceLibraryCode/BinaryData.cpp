/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

#include <cstring>

namespace BinaryData
{

//================== back10.jpg ==================
static const unsigned char temp_binary_data_0[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,106,43,155,152,108,237,165,185,184,149,34,134,37,46,
238,231,1,64,234,77,80,137,119,87,35,173,124,72,240,254,143,49,183,89,222,246,232,113,228,218,46,252,31,66,221,63,157,115,146,94,107,127,18,239,101,183,211,228,147,77,240,228,111,178,73,241,135,184,246,247,255,0,119,160,239,147,197,118,186,23,132,244,
111,15,68,169,97,100,139,40,24,105,220,110,145,191,224,93,190,131,2,181,229,132,126,45,251,10,237,236,115,3,199,126,41,190,27,180,223,5,93,24,143,70,157,153,115,250,10,15,141,188,95,104,55,222,248,34,115,24,234,96,145,137,31,144,53,232,100,82,0,5,28,
241,254,80,179,238,113,154,79,197,13,7,80,159,236,247,109,62,153,115,156,121,119,105,129,159,247,135,3,241,197,118,74,234,234,29,24,50,176,200,96,114,8,245,21,157,172,120,123,74,215,160,49,106,54,81,79,145,129,33,24,117,250,48,228,87,1,53,174,183,240,
202,97,115,103,36,186,159,135,11,126,246,7,63,61,190,123,143,79,168,224,247,3,173,10,48,159,195,163,236,26,158,165,147,235,74,9,205,81,210,245,75,77,99,78,134,254,202,81,44,18,140,171,14,15,184,35,177,29,197,93,29,107,54,173,163,24,30,181,230,254,47,
184,184,241,103,138,237,252,31,99,43,71,109,22,39,212,101,94,192,96,129,248,2,63,22,30,149,232,151,19,37,180,19,79,33,194,68,133,219,232,6,79,242,174,3,225,93,187,93,89,106,126,33,184,25,185,212,174,152,238,63,221,28,227,243,39,242,21,165,63,117,57,118,
19,59,187,27,27,109,58,202,27,75,72,86,27,120,84,34,34,244,3,252,247,171,20,85,123,235,235,93,58,206,75,187,203,136,224,183,140,101,228,144,224,10,207,86,198,88,235,72,24,48,5,72,32,244,34,188,75,198,95,19,238,181,97,37,134,138,100,181,177,32,171,77,
210,89,135,183,247,23,245,62,221,43,168,155,199,250,119,133,252,33,164,219,38,219,189,79,236,48,237,183,86,225,62,65,203,158,223,78,167,245,173,222,26,162,73,181,185,60,200,244,92,140,129,145,147,210,155,44,105,52,79,20,136,174,142,10,178,176,200,96,
122,130,43,201,62,28,107,218,143,136,60,117,123,121,169,92,52,178,125,137,130,168,225,35,27,215,133,29,135,249,53,235,181,157,74,110,148,185,94,227,78,231,153,233,170,223,15,252,116,186,81,102,254,194,213,206,235,125,199,136,100,232,6,126,184,95,161,
83,218,189,52,117,174,51,226,126,152,47,252,27,61,194,12,92,88,58,220,70,227,168,193,195,126,135,63,133,116,62,29,212,191,181,252,61,167,234,7,150,184,129,29,191,222,198,27,245,6,157,79,122,42,125,118,96,183,177,15,139,29,147,194,90,195,47,12,44,229,
199,253,242,107,51,225,178,170,248,3,75,219,142,85,216,253,75,182,107,162,212,237,5,254,153,119,102,127,229,188,47,23,253,244,164,127,90,227,190,19,222,25,124,32,214,50,113,53,133,203,196,234,122,140,157,195,249,159,202,154,254,27,245,14,167,103,121,
44,208,217,205,37,181,185,184,157,16,148,132,56,77,231,176,201,224,102,190,116,241,103,136,117,189,115,85,145,53,143,50,3,3,16,182,100,21,88,79,208,245,62,231,159,194,190,145,174,123,196,254,12,210,252,81,111,139,164,242,174,208,98,43,168,199,206,190,
199,251,195,216,254,24,170,195,85,141,57,94,72,79,83,231,3,207,52,14,149,181,226,79,11,106,158,24,187,242,111,162,204,78,127,117,114,131,49,201,244,244,62,199,154,233,245,31,134,119,19,248,114,195,88,209,55,76,210,218,199,44,246,108,114,217,42,9,40,123,
255,0,187,249,122,87,176,241,20,213,155,123,153,217,142,248,59,255,0,35,101,223,253,121,55,254,134,181,237,213,226,95,7,209,147,197,215,170,202,202,203,102,202,202,195,4,29,235,193,29,171,219,107,201,198,191,223,26,71,99,43,196,200,175,225,109,93,92,
101,77,156,185,255,0,190,13,99,252,51,102,111,135,250,89,110,194,64,62,155,218,165,248,133,168,46,155,224,109,82,66,216,105,99,242,19,61,203,156,127,44,254,85,111,193,118,13,166,248,63,73,181,113,135,91,117,102,30,133,190,99,252,235,45,169,124,199,212,
220,111,110,181,230,147,73,255,0,8,47,196,135,186,147,228,209,181,207,188,221,22,41,115,201,62,152,39,63,71,62,149,233,135,173,100,248,135,65,180,241,38,145,54,157,120,48,175,202,72,7,205,27,142,140,63,207,35,138,154,114,81,118,123,48,102,181,37,121,
174,133,226,123,207,7,222,39,135,124,87,149,133,120,179,212,48,74,50,118,4,250,123,245,29,15,173,122,68,114,199,60,75,44,78,175,27,140,171,169,200,97,234,13,18,139,139,242,2,43,219,27,109,70,210,75,91,200,35,158,222,81,135,142,65,144,194,150,202,210,
43,11,24,44,224,4,67,4,98,52,4,228,133,3,3,154,158,138,139,189,134,103,166,141,97,22,176,218,172,118,200,151,175,17,137,229,94,11,174,65,249,189,79,3,158,181,160,41,14,48,73,60,1,147,94,125,226,79,27,205,127,116,124,61,225,47,244,189,70,92,172,151,49,
253,200,71,66,67,116,200,254,247,65,238,106,212,101,55,97,108,85,241,28,223,240,154,248,230,207,195,150,196,190,157,167,63,159,125,34,244,44,58,175,254,203,245,99,233,94,152,160,0,0,24,30,130,185,239,8,248,90,223,194,218,74,219,163,9,110,165,59,238,39,
199,50,55,183,251,35,183,231,212,215,66,58,211,169,36,237,24,236,129,1,235,69,59,111,61,104,219,239,89,140,207,213,52,155,13,106,201,172,239,237,146,226,6,231,107,14,65,245,7,168,62,226,184,102,240,55,136,124,61,35,73,225,45,116,172,4,238,251,21,231,
43,249,224,131,249,3,239,94,147,183,222,147,109,92,106,53,167,65,52,121,208,241,39,196,27,47,146,243,194,81,93,17,252,118,210,96,31,200,154,15,138,124,123,119,242,90,248,52,64,199,163,92,74,112,63,50,181,232,187,125,232,216,42,189,162,254,84,22,60,217,
188,35,226,255,0,18,145,255,0,9,46,182,150,182,100,229,172,236,135,81,232,113,199,231,186,187,77,19,195,218,95,135,109,62,205,166,218,172,64,224,187,158,94,67,234,205,212,255,0,42,213,219,239,75,183,222,166,85,27,86,232,59,13,160,117,167,109,247,163,
111,61,106,0,255,217,0,0 };

const char* back10_jpg = (const char*) temp_binary_data_0;

//================== forward10.jpg ==================
static const unsigned char temp_binary_data_1[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,106,142,175,171,89,232,154,108,183,247,243,8,173,226,
28,158,165,143,96,7,114,125,42,146,109,217,8,188,91,29,235,149,213,254,34,248,107,71,118,142,109,64,79,50,240,99,181,30,97,7,208,158,131,243,174,102,24,188,69,241,33,204,179,75,38,147,225,194,126,72,211,253,101,192,254,191,95,186,59,3,93,150,139,224,
221,7,65,69,251,22,159,15,152,63,229,180,138,30,67,255,0,2,61,63,12,86,188,176,135,198,238,251,33,106,206,107,254,22,188,50,101,173,124,59,172,78,159,222,17,143,233,154,146,31,139,154,58,200,19,80,211,245,43,2,120,204,176,130,63,158,127,74,239,249,29,
9,31,67,81,79,111,13,204,70,59,136,146,104,207,85,145,67,3,248,26,57,233,255,0,47,226,26,148,180,175,16,105,122,228,70,77,50,250,27,144,6,89,81,176,203,245,83,200,252,171,71,36,215,17,173,124,53,211,174,36,251,110,136,237,164,234,40,119,36,144,18,16,
159,117,29,63,15,200,212,30,31,241,142,161,97,171,47,135,188,91,24,130,248,144,32,187,224,71,56,232,50,122,100,246,35,131,208,224,208,225,25,43,193,252,186,133,251,157,254,79,173,40,39,52,148,14,181,144,192,245,175,47,8,223,18,124,101,35,72,88,248,119,
73,125,170,128,241,113,39,255,0,95,31,247,207,214,186,191,31,234,205,163,248,51,80,185,141,182,202,233,228,198,125,25,248,207,229,154,119,129,180,117,209,60,35,99,106,23,18,188,98,105,125,221,249,253,1,3,240,173,97,238,195,159,174,194,235,99,161,68,88,
209,81,20,42,168,194,168,24,0,14,194,150,150,188,143,89,241,238,163,225,127,136,90,164,12,13,222,154,100,66,214,238,121,76,162,228,161,236,125,186,31,214,149,42,114,168,218,142,224,244,61,114,138,224,188,81,226,187,125,75,225,253,206,171,161,95,178,203,
20,144,156,169,219,36,77,188,112,195,183,242,62,245,91,193,255,0,19,237,181,67,29,134,182,99,180,190,56,84,152,113,20,167,255,0,101,63,167,242,170,246,19,113,230,75,96,185,232,181,131,226,207,11,218,248,167,71,123,73,130,173,194,130,214,243,17,204,111,
254,7,161,21,191,210,147,173,100,155,139,186,25,197,252,62,241,13,214,161,103,115,163,106,185,93,91,76,111,42,93,199,151,78,128,251,145,208,159,161,239,93,168,235,94,113,226,69,30,29,248,157,161,235,81,252,144,234,95,232,151,62,132,240,185,63,129,83,
255,0,1,175,71,30,157,234,234,37,117,37,212,72,243,239,139,172,91,195,250,108,61,22,93,65,21,191,239,150,255,0,26,244,5,1,84,40,232,56,21,195,124,90,181,121,188,27,246,136,198,90,210,230,57,190,131,149,254,162,187,29,58,237,47,244,219,91,200,206,82,120,
82,80,127,222,25,167,47,225,175,152,117,44,215,206,255,0,18,63,228,160,106,191,239,39,254,139,90,250,34,190,120,248,140,172,255,0,16,181,69,80,75,23,64,0,25,39,228,94,149,211,151,187,84,126,132,207,99,151,73,93,21,213,29,149,100,0,56,7,1,128,57,0,250,
243,205,52,242,49,93,117,207,128,181,13,55,194,23,90,238,169,155,119,95,44,67,107,252,127,51,1,151,244,224,244,235,235,142,149,149,225,207,11,234,158,39,189,242,44,33,253,218,159,222,220,62,68,113,143,115,235,236,57,175,77,86,167,102,239,162,34,204,233,
124,19,241,11,83,210,174,45,244,171,184,167,212,108,221,130,70,136,55,77,31,178,255,0,120,127,178,127,3,94,228,167,42,14,8,207,99,92,223,133,188,19,165,248,94,12,219,167,157,122,203,137,46,164,31,49,246,31,221,30,195,241,205,116,181,226,226,42,83,156,
239,5,99,84,159,83,207,190,46,40,95,15,233,215,3,253,100,55,232,84,250,100,31,240,21,223,169,220,3,119,35,53,231,191,19,216,223,92,248,115,68,143,6,75,187,224,228,127,178,48,185,255,0,199,143,229,94,134,58,241,211,181,76,255,0,135,21,234,29,74,154,190,
157,22,175,164,221,233,243,255,0,171,185,137,163,39,211,35,131,248,28,31,194,184,207,134,186,172,176,219,221,120,99,80,59,47,244,201,25,85,79,241,71,158,223,66,127,34,43,191,61,107,134,241,175,134,47,101,187,131,196,190,31,37,53,123,63,188,139,255,0,
45,208,118,199,115,140,140,119,28,122,82,166,211,78,50,234,12,238,107,14,223,194,154,100,62,34,187,215,94,47,58,254,225,129,87,147,145,16,10,23,228,29,143,29,122,213,95,9,120,202,195,196,214,219,20,139,125,66,49,137,173,28,225,148,142,165,115,212,126,
163,189,116,213,47,154,45,173,131,115,55,93,209,109,188,65,164,190,155,118,206,176,72,232,207,229,156,49,10,192,227,61,179,138,179,97,167,218,105,150,113,218,89,91,199,5,188,99,11,26,12,1,255,0,215,247,171,52,82,230,109,91,160,194,145,153,85,75,51,5,
0,100,146,112,0,245,161,153,81,11,187,5,85,25,36,156,0,43,205,60,65,226,27,191,26,95,55,134,188,48,75,91,55,23,215,248,249,2,103,144,15,247,127,244,46,131,140,154,168,65,201,249,9,187,14,240,241,62,48,248,135,119,226,32,24,233,186,106,253,158,204,145,
195,182,62,240,252,217,191,21,175,73,29,106,134,139,163,90,104,58,76,26,117,154,226,40,71,83,213,155,187,31,114,107,64,117,162,164,148,158,155,32,72,15,90,41,219,121,235,70,223,122,129,156,135,137,60,5,97,173,207,253,161,109,43,233,250,162,157,203,117,
7,5,155,177,96,58,159,113,131,88,139,169,124,65,240,223,238,239,116,200,181,219,85,233,61,185,253,230,61,241,207,230,191,141,122,86,223,122,77,181,106,171,90,73,93,10,199,157,15,138,145,197,149,187,240,206,175,12,131,170,136,193,254,96,82,31,136,218,
181,250,236,209,188,31,168,204,231,163,79,149,95,208,127,81,94,141,180,255,0,120,210,144,71,241,31,198,171,218,67,249,63,16,179,60,208,248,95,197,222,45,97,255,0,9,54,162,150,26,126,115,246,27,66,50,223,94,223,153,111,165,119,58,70,141,167,232,86,11,
101,167,91,36,48,142,78,57,44,125,88,245,39,222,180,118,209,183,222,166,85,28,180,217,2,67,69,40,235,75,183,222,151,111,61,106,6,127,255,217,0,0 };

const char* forward10_jpg = (const char*) temp_binary_data_1;

//================== gotoend.jpg ==================
static const unsigned char temp_binary_data_2[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,104,170,16,100,213,91,221,74,203,77,131,207,190,188,
134,218,47,239,204,225,65,250,103,173,113,122,247,141,239,46,117,54,208,124,37,0,187,212,57,18,220,245,142,15,94,122,18,59,147,192,247,60,83,52,255,0,134,48,79,48,190,241,61,253,198,173,124,220,176,46,68,107,237,234,71,228,61,171,85,77,37,121,187,126,
98,191,99,66,231,226,151,132,237,88,175,246,139,76,71,252,242,133,152,126,100,10,101,191,197,111,9,206,225,77,244,209,123,201,3,1,250,102,186,27,79,14,232,214,42,22,215,74,179,137,71,247,96,92,254,100,102,164,185,209,52,171,180,41,113,166,217,202,167,
179,192,167,250,81,122,93,152,106,46,155,173,105,186,194,111,211,175,237,238,134,50,68,78,9,31,81,212,85,236,154,225,117,79,133,250,68,242,125,171,71,146,109,34,245,78,228,146,221,206,208,127,221,206,71,224,69,82,176,241,126,177,225,93,70,61,39,198,49,
135,130,67,182,13,78,62,85,191,222,245,30,167,130,59,131,214,143,102,165,172,29,252,130,253,207,71,201,165,4,230,152,142,178,34,186,48,101,97,144,192,228,17,235,78,29,107,33,129,235,92,47,143,181,251,180,123,111,12,232,164,157,87,81,249,75,41,193,138,
51,223,61,179,131,207,96,9,244,174,229,136,80,73,56,3,169,244,175,57,248,127,17,215,188,71,174,120,178,224,110,243,38,54,214,185,254,4,29,113,255,0,1,218,63,58,214,154,74,242,125,63,49,51,170,240,199,134,108,188,47,165,37,165,170,134,144,224,207,57,24,
105,91,215,233,232,59,86,237,37,112,190,36,248,131,255,0,8,199,138,215,79,187,180,243,172,94,221,36,47,23,250,196,36,144,120,60,48,227,167,20,148,103,82,90,106,195,99,187,162,179,244,141,107,78,215,44,197,214,155,117,29,196,71,174,211,202,159,70,7,144,
126,181,160,6,72,30,166,161,166,157,152,194,168,107,26,69,158,185,166,203,97,125,8,146,9,7,226,167,179,41,236,71,173,121,174,139,241,3,94,190,241,236,90,60,239,108,108,222,238,72,72,88,0,109,171,187,28,231,216,87,172,142,149,115,132,233,53,113,93,51,
206,124,29,168,94,120,99,196,18,120,51,86,144,201,30,55,233,211,158,3,175,93,191,143,56,29,136,35,210,189,20,30,107,131,248,163,167,57,209,109,245,219,79,150,243,74,153,101,87,29,118,18,51,249,29,167,243,174,203,75,190,77,83,75,180,191,136,97,46,97,89,
64,244,200,206,41,212,180,146,159,125,253,65,16,248,134,102,182,240,222,169,58,125,232,237,101,97,245,216,107,3,225,124,11,15,128,52,242,163,153,12,142,126,187,200,254,64,87,69,173,90,155,221,18,254,212,14,102,182,146,49,245,42,64,174,95,225,85,218,220,
120,22,218,47,227,182,150,72,152,122,124,219,135,232,212,47,225,63,80,234,118,181,225,159,23,191,228,115,143,254,188,226,254,109,94,233,94,23,241,123,254,71,56,255,0,235,206,47,230,213,182,7,248,194,158,199,25,166,234,119,218,69,218,221,233,247,82,91,
206,189,30,51,140,143,66,58,17,236,107,214,60,45,241,106,27,182,138,211,94,136,65,57,96,171,117,10,146,142,127,218,94,170,126,153,31,74,224,188,51,224,93,103,196,197,101,130,47,179,217,19,205,212,195,11,255,0,1,29,91,240,227,222,189,147,195,62,2,209,
188,52,18,88,98,251,69,232,192,107,169,192,45,255,0,1,29,23,240,231,222,186,177,147,161,182,236,152,166,121,63,133,249,248,179,110,71,35,251,70,111,253,158,190,128,29,5,124,255,0,225,159,249,43,86,255,0,246,17,155,255,0,103,175,127,29,5,115,227,126,40,
250,21,19,43,197,16,45,215,133,117,104,88,2,26,206,94,190,202,72,253,69,100,252,51,156,207,224,13,44,183,240,7,79,192,59,98,180,60,99,118,182,62,14,213,231,99,129,246,87,81,245,97,180,126,166,169,252,59,180,107,63,1,233,40,195,5,226,50,99,253,230,36,
126,132,87,63,252,186,126,163,234,117,4,227,39,210,188,215,195,175,255,0,8,151,196,109,75,65,155,228,178,213,27,237,54,100,244,221,201,192,255,0,199,151,254,2,43,210,143,90,229,252,109,225,97,226,93,45,13,187,121,90,149,169,243,45,102,7,4,55,247,73,236,
14,7,61,136,6,149,54,147,113,150,204,25,212,87,63,127,224,237,35,84,241,10,235,26,132,38,230,84,137,99,72,164,63,187,93,164,156,149,238,121,239,199,181,101,248,51,198,159,218,249,210,117,117,54,186,229,183,201,36,82,13,190,110,63,137,125,253,71,226,56,
174,211,34,147,82,131,176,211,76,69,80,138,21,64,0,12,0,56,0,82,131,130,13,20,84,1,194,233,191,13,45,180,223,20,199,174,46,167,113,36,137,112,243,249,70,37,11,150,207,25,235,252,85,221,118,162,185,175,22,248,194,203,194,246,60,226,123,249,70,45,237,84,
252,206,123,18,59,47,243,232,42,219,157,70,175,168,172,145,207,124,71,187,147,88,189,211,60,31,98,196,220,94,74,178,92,149,231,100,99,166,127,86,255,0,128,143,90,244,27,107,120,237,109,225,183,133,118,197,18,8,208,122,0,48,63,65,92,119,129,124,51,119,
105,37,206,191,174,29,250,197,249,220,193,135,48,161,254,31,98,120,200,236,0,21,219,83,168,210,74,49,232,11,184,30,180,83,182,243,214,147,111,189,102,51,151,241,71,130,116,255,0,19,5,157,139,90,234,49,99,202,187,139,134,24,232,15,168,253,71,99,92,226,
235,62,56,240,151,238,181,93,48,235,118,9,247,110,173,201,50,1,239,129,159,204,126,53,233,123,125,233,2,224,230,173,85,183,187,37,116,38,142,10,223,226,223,134,223,2,235,237,182,114,119,73,96,206,63,239,146,106,73,190,45,120,90,49,251,169,174,174,27,
178,199,110,70,127,60,87,101,53,133,165,209,255,0,72,181,130,95,250,233,18,183,243,20,216,180,219,27,98,12,22,86,209,31,88,225,85,254,66,171,154,159,103,247,134,167,0,124,91,226,239,19,102,47,14,232,47,99,110,220,125,182,247,140,15,81,158,63,45,213,173,
225,175,1,219,233,55,135,85,212,238,27,82,214,88,238,55,18,228,170,31,246,65,231,62,231,240,197,118,91,121,205,27,121,235,73,213,210,209,86,65,97,49,74,58,211,182,251,209,183,158,181,152,207,255,217,0,0 };

const char* gotoend_jpg = (const char*) temp_binary_data_2;

//================== loop.jpg ==================
static const unsigned char temp_binary_data_3[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,105,9,10,164,146,0,28,146,123,85,8,92,214,102,173,
226,61,35,67,92,234,58,140,22,228,140,132,102,203,159,162,142,107,140,213,124,93,171,248,159,82,147,69,240,106,226,56,248,184,212,219,133,65,254,201,237,245,234,123,14,245,161,163,124,51,209,108,15,218,117,32,218,181,243,28,188,183,36,149,39,217,123,
254,57,173,125,156,82,188,223,200,87,236,65,47,197,223,15,7,43,109,6,161,119,142,241,64,0,253,78,105,177,252,94,208,119,1,115,105,169,219,2,126,244,144,2,63,67,93,212,22,208,90,198,18,222,8,161,65,209,99,64,160,126,84,233,97,142,116,41,52,105,42,158,
170,234,24,126,180,115,83,254,95,196,53,50,180,143,21,232,154,238,6,159,169,65,52,159,243,200,157,178,127,223,39,154,216,207,189,113,218,223,195,109,3,86,204,176,65,253,157,118,57,89,237,62,92,31,82,189,63,44,31,122,196,181,241,22,187,224,107,248,180,
255,0,21,19,123,166,72,118,65,169,32,44,87,217,187,159,161,228,118,205,28,145,151,192,245,236,23,182,231,166,100,250,210,130,115,81,197,44,115,194,147,67,34,201,27,168,101,117,57,12,15,66,13,60,117,172,134,7,173,121,247,142,245,75,189,83,84,181,240,102,
145,38,219,155,192,26,238,80,127,213,197,215,7,219,28,159,108,14,245,223,203,34,67,27,203,33,194,34,150,99,232,0,201,175,61,248,105,3,106,183,90,207,138,174,70,103,190,184,104,226,39,248,99,24,36,15,252,116,127,192,107,90,105,36,228,250,126,98,103,101,
161,232,118,94,31,210,162,176,177,143,108,105,203,49,251,210,55,118,99,220,154,210,162,168,106,186,214,157,162,90,253,167,82,188,138,218,44,224,25,27,150,62,128,117,39,233,89,251,210,126,99,216,191,69,113,191,240,180,124,41,255,0,63,211,159,113,106,255,
0,225,73,255,0,11,79,194,191,243,251,113,255,0,128,175,254,21,94,202,125,133,116,118,117,79,82,211,45,53,125,62,107,27,232,86,91,121,87,12,167,244,35,208,142,198,185,93,55,226,102,143,169,248,145,116,168,132,190,84,193,69,189,198,198,1,156,245,82,164,
100,125,122,125,43,181,164,225,40,61,116,97,185,230,254,17,187,186,240,151,137,229,240,118,165,49,146,214,76,203,167,76,221,193,201,219,248,224,241,216,131,235,94,146,58,215,5,241,79,79,118,208,237,245,187,111,146,243,74,153,101,87,29,118,146,51,249,
29,167,243,174,203,74,190,77,79,75,180,191,143,27,46,97,89,70,59,100,3,87,83,222,138,154,235,184,46,197,63,22,74,208,120,71,88,145,126,242,217,203,143,251,228,138,203,248,109,18,69,224,29,43,96,198,244,119,63,82,237,91,122,237,161,191,208,53,27,69,25,
105,237,164,140,15,114,167,31,173,115,127,11,47,22,239,192,150,145,231,231,182,146,72,92,122,97,183,15,209,133,11,248,79,212,58,157,167,82,5,112,94,28,210,135,137,53,253,71,196,122,213,179,57,138,225,173,172,45,231,67,182,40,211,248,130,158,231,215,235,
93,237,112,222,36,241,229,198,139,226,107,77,38,45,38,238,116,99,186,87,88,203,52,171,131,196,67,190,14,50,123,96,241,74,154,147,186,142,224,206,220,71,24,232,136,7,251,162,141,137,253,197,252,133,113,191,240,176,215,31,242,43,120,135,255,0,1,63,250,
244,127,194,195,31,244,43,120,135,255,0,1,63,250,244,253,157,78,193,116,108,106,175,162,248,115,237,126,36,188,128,36,187,18,57,38,84,220,251,115,128,170,62,167,183,90,218,141,195,198,174,51,134,80,70,70,15,53,193,53,174,181,227,173,66,212,234,90,116,
154,86,129,109,40,155,236,243,159,223,93,56,251,187,135,101,255,0,60,246,239,179,83,53,107,43,234,8,199,241,108,75,63,132,53,136,223,161,179,144,254,74,72,254,85,157,240,226,83,47,128,116,146,121,43,27,39,224,29,133,79,227,203,229,176,240,70,171,41,56,
45,1,137,121,238,228,40,254,102,157,224,107,54,178,240,70,145,11,12,55,217,195,145,254,241,45,253,106,191,229,215,204,58,157,9,61,107,205,52,41,63,225,14,248,141,127,162,76,118,105,250,177,251,69,155,31,186,28,231,229,254,107,248,47,173,122,89,235,92,
223,140,252,43,31,138,52,129,26,191,149,125,1,243,45,103,233,177,189,9,29,143,31,76,3,218,149,57,36,220,101,179,6,116,149,20,182,208,79,36,50,75,10,59,194,251,226,102,92,148,108,99,32,246,56,36,87,23,225,31,26,61,196,231,66,241,0,54,186,221,185,242,207,
153,192,159,29,8,237,187,249,245,30,149,220,212,202,14,50,179,4,238,25,62,167,243,163,39,212,209,69,72,194,138,43,143,241,135,141,99,208,192,211,116,229,251,94,181,57,9,13,186,13,219,9,232,88,14,254,139,223,216,83,140,92,157,144,24,222,57,157,188,77,
226,125,47,194,22,109,185,4,130,226,249,151,248,20,118,63,69,36,253,89,107,209,226,69,141,21,17,118,170,128,21,71,96,58,10,228,252,15,225,73,52,11,105,239,181,25,60,253,98,244,239,185,144,157,197,114,115,180,30,252,242,79,115,236,5,117,195,173,93,70,
180,138,217,9,1,235,69,59,111,61,104,219,239,89,140,231,124,77,225,13,47,197,54,225,111,35,49,220,160,253,213,204,120,14,158,222,227,216,254,149,203,70,60,125,225,16,34,17,199,226,29,57,56,82,9,243,148,127,232,95,250,21,122,86,223,122,77,181,162,168,
210,179,213,10,199,158,175,197,139,40,126,93,75,67,213,108,229,29,84,198,8,253,112,127,74,86,248,179,166,203,242,88,233,26,173,212,135,162,172,64,103,245,63,202,189,4,160,60,55,63,90,2,4,232,0,250,113,85,205,15,229,252,66,204,243,121,47,124,125,226,177,
229,217,217,38,129,100,253,102,152,159,52,143,108,243,249,1,245,174,131,194,254,8,211,124,52,13,194,238,186,212,31,62,101,220,220,183,61,118,255,0,116,126,167,185,174,167,109,27,125,234,93,70,215,42,209,5,132,160,117,167,109,247,163,111,61,107,54,51,
255,217,0,0 };

const char* loop_jpg = (const char*) temp_binary_data_3;

//================== mute.jpg ==================
static const unsigned char temp_binary_data_4[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,104,61,106,11,203,203,123,11,73,110,238,165,72,96,137,75,188,
142,112,20,85,37,113,19,231,222,177,181,111,22,104,122,27,20,212,53,56,34,148,127,203,32,119,63,253,242,50,107,138,147,88,241,31,196,27,153,45,244,38,125,47,67,70,217,37,235,130,36,151,212,12,115,248,15,196,246,174,131,70,248,113,225,237,37,67,181,152,
189,184,234,102,187,249,201,62,161,122,10,215,146,49,248,158,189,133,119,208,161,39,197,223,14,43,98,52,191,152,122,165,184,199,234,213,53,175,197,127,11,220,56,73,46,110,45,152,255,0,207,104,14,63,76,215,99,29,172,16,168,88,160,138,53,29,2,32,3,244,
21,5,222,145,167,95,198,99,188,211,237,103,83,212,73,18,159,233,69,233,118,127,120,106,62,195,84,177,212,224,243,236,47,33,185,139,251,209,56,108,125,125,63,26,181,147,94,127,169,252,52,130,25,142,161,225,123,217,180,155,244,229,85,92,152,219,219,212,
126,163,218,165,240,223,141,110,134,168,60,63,226,152,5,158,172,48,35,151,164,115,250,123,2,123,99,131,236,120,161,193,53,120,59,254,97,126,231,119,147,235,74,9,205,38,104,29,107,33,129,235,94,99,171,188,223,16,124,100,218,20,18,178,232,90,107,110,188,
145,15,250,217,1,232,15,215,32,125,24,250,87,105,226,237,88,232,126,22,212,111,208,129,36,113,17,25,244,118,249,87,245,57,252,43,47,225,198,138,186,71,131,237,100,97,254,145,122,62,211,51,30,167,119,221,31,130,227,243,53,173,63,118,46,127,36,38,117,22,
182,176,89,90,197,109,109,10,67,4,74,21,35,65,128,162,166,237,69,49,229,72,163,105,36,117,72,208,110,102,99,128,163,212,147,210,179,220,99,232,174,10,111,137,150,87,94,37,176,209,180,120,197,202,207,114,177,75,116,220,32,4,243,176,117,63,83,199,214,187,
137,39,138,19,31,155,34,33,145,130,32,102,3,115,30,195,212,240,105,202,18,141,185,150,226,185,45,115,190,46,240,173,175,138,52,166,129,182,199,119,24,45,109,62,57,141,189,15,251,39,191,231,212,84,186,38,169,117,62,171,171,105,119,251,13,205,156,193,163,
100,93,161,224,144,102,51,143,81,130,167,220,86,225,164,155,140,174,131,115,140,240,7,136,238,117,75,43,141,39,85,220,186,190,154,222,84,193,254,243,168,56,13,238,120,193,252,15,122,237,7,90,243,143,19,175,252,35,159,18,52,93,118,63,146,13,64,253,146,
239,29,9,225,114,127,2,167,254,3,94,142,56,39,61,170,234,165,117,37,179,4,112,95,23,164,101,240,106,68,14,22,107,200,209,190,152,99,253,43,184,181,137,97,181,134,36,24,88,227,85,3,216,0,43,141,248,177,106,215,30,7,154,84,25,54,211,199,55,208,103,105,
255,0,208,171,171,210,174,210,255,0,71,178,188,67,149,154,4,113,248,168,52,223,240,215,171,14,165,195,210,190,101,213,124,67,172,234,107,37,181,246,169,119,113,110,36,39,203,146,76,175,7,142,43,233,170,241,157,91,225,6,161,13,188,151,26,125,252,119,147,
228,183,146,209,249,101,129,231,229,57,35,63,92,86,248,41,211,132,159,56,164,159,67,144,240,103,252,142,186,55,253,125,167,243,175,86,241,13,245,197,222,135,226,117,184,40,103,209,111,35,184,180,145,23,27,64,9,34,254,35,44,9,239,154,242,239,10,219,79,
103,227,221,38,222,234,23,134,116,188,69,120,228,93,172,167,61,197,123,38,187,225,233,31,73,189,178,211,210,89,31,88,191,71,188,149,220,31,46,50,87,113,250,5,64,0,247,173,113,141,123,68,255,0,173,197,29,137,11,236,248,143,109,34,140,11,189,33,247,255,
0,192,37,82,63,244,51,93,69,115,16,98,243,226,61,220,137,254,175,78,211,146,220,159,71,145,247,227,240,85,31,157,116,245,193,46,133,163,128,248,187,24,255,0,132,78,222,124,124,240,94,198,202,125,50,26,187,184,28,201,4,82,30,172,129,191,49,92,23,197,153,
12,218,78,149,165,199,204,215,183,200,170,189,200,3,31,205,133,122,2,32,141,21,7,69,1,71,225,197,92,255,0,135,31,152,186,149,53,93,62,45,83,75,187,176,159,253,85,196,77,19,31,76,142,191,135,90,226,254,25,234,82,197,107,117,225,141,67,228,191,210,228,
101,10,122,180,100,246,246,4,254,68,87,160,30,181,194,120,219,195,151,201,127,7,138,124,62,8,213,109,7,239,98,81,159,61,7,183,115,142,49,220,123,129,69,54,154,113,125,127,48,125,206,238,138,231,188,43,226,205,63,197,22,62,101,188,130,59,164,31,191,183,
99,243,70,127,170,251,254,124,215,67,89,180,226,236,199,185,157,125,161,233,186,141,229,165,237,205,170,53,213,164,130,72,102,3,14,164,118,207,113,236,107,71,140,81,69,13,220,10,26,110,149,111,165,253,172,194,100,119,186,184,107,137,100,145,183,51,49,
247,244,0,0,7,160,171,253,104,175,60,241,111,139,46,53,27,191,248,70,60,46,126,209,168,79,148,158,120,219,229,129,127,139,230,236,125,79,111,173,84,98,230,197,123,16,91,72,60,103,241,71,237,81,252,250,94,134,187,81,199,221,121,115,219,254,5,207,209,5,
122,80,224,214,47,134,60,59,107,225,141,22,45,62,219,12,195,230,150,92,96,200,253,207,244,3,176,21,178,58,209,81,166,244,217,2,20,245,162,157,183,158,180,109,247,168,25,196,248,143,225,252,26,149,239,246,182,143,114,250,86,174,167,112,154,44,133,115,
254,208,29,15,184,235,220,26,203,79,21,120,207,195,159,186,215,180,7,212,33,78,62,215,101,212,143,83,128,71,230,22,189,39,111,189,24,199,204,58,213,170,186,90,74,226,177,192,39,197,223,14,145,251,248,181,8,31,186,188,0,145,249,26,100,159,22,180,201,127,
119,165,105,58,157,252,199,133,85,139,104,63,150,79,233,93,251,90,195,49,204,145,68,231,213,144,31,231,78,72,214,49,132,85,81,232,163,21,124,212,255,0,151,241,13,79,52,146,219,199,126,50,204,119,91,60,63,165,191,223,69,39,205,113,233,253,227,255,0,142,
143,173,118,30,30,240,190,153,225,139,51,111,99,14,25,177,230,76,252,188,135,220,250,123,14,5,110,109,164,43,239,82,234,54,172,180,65,96,160,117,167,109,247,163,111,61,107,49,159,255,217,0,0 };

const char* mute_jpg = (const char*) temp_binary_data_4;

//================== pause.jpg ==================
static const unsigned char temp_binary_data_5[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,105,9,10,9,39,0,12,228,213,8,92,154,130,234,250,214,
198,19,53,221,204,54,241,255,0,126,87,10,63,90,225,53,79,27,234,58,206,164,250,47,131,32,91,137,151,137,175,216,126,238,33,234,51,198,61,207,94,192,210,217,124,47,183,185,148,94,120,151,82,186,213,175,15,44,12,133,99,7,208,119,63,167,210,181,246,105,
43,205,219,243,21,251,27,115,124,66,240,173,187,109,125,110,221,136,235,176,51,143,204,10,150,219,199,126,24,187,96,177,107,118,129,143,65,35,20,255,0,208,128,169,109,252,27,225,187,100,217,22,135,98,7,251,80,134,63,153,205,67,119,224,95,12,94,161,89,
116,75,69,207,241,68,190,89,252,212,138,63,117,231,248,6,167,65,28,177,205,24,146,41,22,72,219,163,161,200,63,136,167,100,250,215,156,79,240,251,83,208,29,175,60,31,172,79,3,142,77,157,195,101,28,122,103,161,252,71,227,90,126,24,241,210,234,87,167,70,
214,173,191,179,117,164,59,76,79,194,202,127,217,207,67,237,223,177,52,157,61,57,162,238,130,231,105,147,235,74,9,205,37,3,173,102,48,61,107,206,188,103,170,95,107,250,236,94,11,209,100,40,210,13,218,132,227,56,141,58,237,250,99,4,250,228,14,230,187,
157,91,80,143,74,210,175,53,9,126,229,180,45,41,30,184,25,199,227,210,184,239,134,26,91,174,143,113,175,93,252,247,218,172,205,43,57,235,176,19,143,204,228,254,85,173,59,69,57,190,155,122,137,157,86,137,161,216,120,127,77,142,199,79,139,100,107,203,49,
251,210,55,118,99,220,214,149,37,112,159,20,181,157,75,70,209,172,37,211,111,37,181,146,75,146,142,209,145,150,27,9,199,52,161,25,85,154,93,88,108,119,180,87,13,240,191,87,212,53,175,15,93,92,106,87,114,221,76,151,69,21,228,198,66,237,83,142,62,181,133,
241,71,196,122,206,139,175,88,195,166,234,51,218,197,37,169,119,72,200,195,29,228,103,145,84,168,73,212,246,125,66,250,92,245,106,230,60,97,225,11,127,19,233,249,76,67,168,192,51,107,114,14,8,35,144,164,143,225,207,229,212,85,143,4,222,220,234,62,13,
211,46,239,38,121,174,37,136,151,145,250,177,220,71,53,191,89,221,194,90,110,135,185,199,248,11,196,211,235,22,83,233,186,162,148,214,52,246,242,238,21,184,46,1,192,127,174,120,62,252,247,174,188,117,175,55,241,106,127,194,49,227,253,27,196,144,229,96,
189,111,178,94,129,208,244,25,63,134,15,252,2,189,36,14,131,210,170,164,86,146,91,49,35,142,248,165,112,214,254,1,191,219,214,70,142,51,244,46,9,254,85,191,225,251,101,180,240,230,153,110,131,11,29,172,67,255,0,29,21,131,241,62,216,220,248,7,80,10,57,
136,199,47,224,28,103,244,53,183,225,187,181,190,240,214,151,114,167,34,75,88,207,227,180,3,250,131,77,255,0,9,122,135,83,83,21,230,191,25,191,228,1,166,127,215,217,255,0,208,13,122,93,121,175,198,127,249,0,105,159,245,246,127,244,3,87,133,254,52,66,
91,18,124,27,255,0,145,86,243,254,191,79,254,128,181,206,124,100,255,0,145,147,78,255,0,175,51,255,0,161,154,232,254,13,255,0,200,171,121,255,0,95,167,255,0,64,90,231,62,50,127,200,201,167,127,215,153,255,0,208,205,116,211,255,0,123,100,191,132,244,63,
135,191,242,32,232,255,0,245,196,255,0,232,77,93,53,115,63,15,127,228,65,209,255,0,235,137,255,0,208,154,186,106,225,169,241,203,212,165,177,196,124,87,183,89,188,9,113,33,251,208,77,20,139,245,206,223,235,93,102,149,57,185,210,108,174,27,239,75,111,
27,159,169,80,107,145,248,179,114,33,240,52,176,241,190,230,226,40,212,122,224,150,255,0,217,107,175,211,32,54,186,101,165,185,235,20,17,161,252,20,10,169,127,9,122,191,208,58,139,168,217,69,168,233,215,54,83,15,221,92,68,209,55,208,140,102,184,143,134,
58,140,144,90,222,248,98,244,237,189,210,230,101,10,122,180,100,246,250,31,209,133,122,1,235,92,7,141,244,59,235,29,78,15,23,232,72,77,237,168,197,212,32,100,77,30,48,78,59,241,193,246,193,237,69,54,154,112,125,127,48,103,127,92,71,196,191,15,106,126,
34,210,172,96,210,237,196,210,69,112,93,193,145,83,11,180,142,231,214,183,60,51,226,107,15,19,233,139,121,102,248,97,129,44,36,252,209,55,161,246,244,61,235,110,166,46,84,231,126,168,55,71,25,240,219,64,212,188,61,160,92,218,234,112,8,102,123,163,34,
168,145,91,43,181,70,114,61,193,172,95,137,94,17,214,252,69,173,89,220,233,150,139,52,81,91,24,216,153,85,112,219,137,238,125,43,211,104,170,141,105,42,158,209,110,22,86,177,135,224,237,58,235,73,240,150,155,97,121,24,142,226,24,138,200,129,131,96,238,
39,168,227,189,110,81,92,143,140,188,100,154,12,43,97,96,62,211,173,92,225,32,183,65,184,161,61,25,135,242,29,254,149,9,57,203,78,161,178,49,60,68,227,197,127,17,244,189,10,47,158,211,76,111,180,221,145,200,221,193,219,250,40,255,0,129,26,244,145,219,
61,107,148,240,55,133,155,195,154,100,146,222,55,153,170,222,183,155,117,33,57,57,234,23,61,241,147,147,220,147,93,88,235,85,82,75,72,199,100,8,15,90,41,219,121,235,70,223,122,204,103,3,174,120,10,104,245,38,214,252,43,121,253,157,169,114,94,48,113,20,
190,188,116,25,244,32,131,237,214,170,193,241,30,255,0,69,113,107,226,237,10,230,210,65,199,218,109,211,49,191,190,51,143,200,154,244,125,180,141,18,58,24,221,21,212,245,86,25,7,240,173,21,84,215,190,175,249,138,199,41,111,241,31,194,87,8,24,106,241,
199,158,210,198,234,71,233,81,94,124,79,240,165,164,101,134,164,110,24,116,88,34,102,39,241,32,10,217,184,240,143,135,174,31,116,218,46,158,237,235,246,117,31,202,164,181,240,214,135,100,193,237,116,123,24,152,116,101,183,92,254,120,163,154,143,152,106,
113,18,248,187,197,62,43,204,30,23,209,228,178,183,99,131,127,120,49,180,122,142,195,240,220,107,123,194,158,7,180,240,252,141,127,117,43,95,106,242,228,201,117,46,73,4,245,219,158,71,212,242,125,186,87,89,182,130,180,58,151,247,98,172,128,74,81,214,
151,111,189,46,222,122,214,108,103,255,217,0,0 };

const char* pause_jpg = (const char*) temp_binary_data_5;

//================== play.jpg ==================
static const unsigned char temp_binary_data_6[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,104,170,16,100,211,94,68,141,11,187,133,69,228,179,
28,1,245,53,201,120,167,199,16,232,179,166,155,167,66,218,134,179,41,10,150,209,228,132,39,166,236,115,248,117,245,192,172,104,60,9,172,248,153,150,239,197,250,180,165,73,202,216,91,54,17,61,137,232,63,0,126,181,164,105,233,205,39,100,43,244,58,139,191,
28,248,102,201,202,205,173,90,238,29,68,111,191,255,0,65,205,65,23,196,79,10,76,219,87,90,128,31,246,213,148,126,162,164,179,240,31,133,236,80,8,180,107,103,35,248,166,6,67,255,0,143,26,177,55,131,252,57,112,155,36,208,236,49,254,204,33,79,230,57,167,
251,175,48,212,211,179,212,44,245,8,188,203,43,168,46,83,251,208,200,28,126,149,99,53,192,95,124,46,177,142,83,117,225,251,219,173,38,240,114,166,57,11,38,125,58,238,3,241,53,94,195,198,122,199,134,175,211,74,241,164,1,81,248,135,82,140,101,31,253,236,
117,30,164,0,71,113,222,143,102,165,172,29,255,0,48,191,115,209,242,125,105,65,57,166,35,164,136,174,140,172,172,1,12,167,32,131,208,131,78,29,107,33,129,235,92,167,142,188,80,222,29,210,82,59,49,230,106,151,141,229,90,198,6,72,61,219,29,241,145,143,
82,69,117,103,57,56,235,94,111,163,39,252,37,95,20,117,45,82,95,158,207,70,2,222,216,118,223,200,207,231,188,254,85,165,36,155,114,150,200,76,219,240,87,132,19,195,246,166,242,244,121,250,205,208,221,115,59,157,197,73,228,168,63,204,247,62,216,174,180,
82,98,145,142,17,143,177,169,109,206,87,96,135,210,87,145,120,107,226,228,145,21,181,241,12,102,68,206,5,228,43,243,15,247,215,191,212,126,85,234,150,26,133,158,167,104,151,86,55,49,92,64,255,0,118,72,219,35,255,0,172,125,170,170,82,157,63,137,2,119,
44,213,13,91,73,178,214,244,233,44,111,224,18,193,39,99,213,79,102,7,177,30,181,127,34,146,161,54,157,208,207,56,240,181,237,231,132,124,74,222,15,213,166,50,218,75,151,211,110,27,184,254,231,208,243,199,98,49,208,138,244,142,245,196,252,77,209,205,255,
0,134,78,163,111,148,188,211,28,92,68,227,168,81,141,223,208,255,0,192,107,163,240,246,168,53,189,2,199,83,29,110,33,12,192,118,110,140,63,48,106,234,90,81,83,251,196,180,208,208,154,79,42,41,100,254,226,150,252,134,107,130,248,69,31,252,82,183,55,103,
253,101,205,236,142,231,232,7,248,154,239,102,143,205,138,72,179,247,212,175,230,49,92,23,194,57,54,248,106,242,197,184,150,210,245,209,135,126,64,255,0,3,78,63,195,151,200,58,158,129,77,147,253,91,125,15,242,167,83,100,255,0,86,223,67,252,171,53,184,
207,148,91,239,31,169,254,117,161,164,107,186,158,131,119,246,157,50,237,224,115,247,148,114,142,61,25,79,6,179,219,239,31,169,173,143,15,248,87,86,241,52,219,52,251,98,98,7,15,112,255,0,44,105,245,61,207,176,201,175,161,147,130,135,191,177,138,191,67,
213,124,51,241,87,77,212,246,91,107,10,154,125,209,227,205,39,247,46,126,167,238,126,60,123,215,161,2,10,130,14,65,232,125,107,138,240,199,195,93,39,65,217,113,116,163,80,190,24,62,108,171,242,33,255,0,101,63,169,201,174,218,188,42,222,207,155,247,123,
26,171,245,43,223,192,183,90,117,205,187,140,164,176,186,17,236,84,138,227,62,17,206,100,240,66,196,223,242,194,230,88,199,211,131,253,77,118,58,149,202,217,233,119,119,78,112,144,194,242,31,193,73,174,63,225,45,187,69,224,120,165,97,131,61,196,178,15,
166,66,255,0,236,180,47,225,63,84,29,78,229,186,215,155,216,200,60,37,241,82,238,206,111,146,199,93,2,88,91,176,151,61,63,239,162,195,254,4,43,210,15,90,230,252,105,225,132,241,54,139,229,35,8,239,160,62,109,172,164,227,107,250,19,232,127,78,15,106,84,
218,78,207,102,12,233,105,174,9,70,3,169,6,184,207,5,248,196,234,129,180,109,96,27,125,114,215,41,36,114,112,102,199,241,15,246,189,71,226,56,174,215,34,147,78,15,80,78,231,151,248,107,225,37,188,44,183,94,32,148,79,38,114,45,34,36,34,255,0,188,221,91,
232,48,62,181,233,112,91,195,107,2,67,4,73,20,72,48,136,138,20,40,246,2,165,162,156,234,78,166,178,96,149,130,138,43,43,94,241,5,135,135,116,199,190,190,152,42,14,17,7,223,145,191,186,163,215,249,119,168,73,183,100,51,154,248,157,171,60,26,20,122,45,
167,207,127,170,200,33,72,199,93,153,25,63,137,192,252,77,117,122,30,152,154,54,137,101,166,198,65,22,208,170,18,59,158,231,241,57,174,47,193,186,77,246,189,173,191,140,245,216,246,59,140,105,246,231,164,105,217,191,34,113,235,146,125,43,208,135,90,186,
141,69,40,47,233,137,119,20,245,164,167,237,231,173,27,125,235,49,156,175,138,188,21,99,226,80,151,27,218,211,82,139,30,77,220,95,120,99,160,111,81,250,142,198,185,213,241,55,139,188,33,251,159,17,233,111,169,217,39,2,254,211,150,199,251,93,143,226,1,
250,215,165,237,247,163,111,57,171,85,109,238,201,93,10,199,25,101,241,67,194,151,145,130,218,131,91,183,116,158,38,4,126,35,34,172,205,241,27,194,80,33,99,172,68,252,103,17,163,177,63,144,173,123,191,15,232,183,199,125,214,147,101,51,55,86,120,20,159,
207,21,21,191,131,188,57,3,7,135,68,211,213,135,57,251,58,159,231,79,154,139,238,26,156,132,255,0,19,39,213,100,54,190,19,208,238,239,231,60,9,165,77,177,175,185,3,250,145,83,104,254,4,187,212,53,20,214,188,99,118,47,239,7,49,218,3,152,98,246,35,161,
250,14,61,115,93,242,195,28,8,34,137,22,52,28,5,65,180,15,192,83,246,251,211,117,82,94,226,183,230,22,26,7,20,163,173,59,111,189,27,121,235,89,12,255,217,0,0 };

const char* play_jpg = (const char*) temp_binary_data_6;

//================== restart.jpg ==================
static const unsigned char temp_binary_data_7[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,104,207,53,66,12,159,90,108,146,199,12,102,73,100,
84,65,213,156,128,7,226,107,135,241,7,143,37,26,145,209,60,51,104,53,29,84,229,93,199,205,20,62,185,236,72,239,200,3,185,237,84,161,248,115,125,173,200,46,188,91,173,220,222,72,121,251,52,15,136,211,219,56,199,228,7,214,180,84,236,175,39,97,92,234,231,
241,159,134,237,88,172,186,229,136,97,216,74,27,249,102,157,109,227,15,14,222,56,88,53,187,38,99,208,25,130,147,249,226,169,91,252,61,240,165,178,5,93,18,221,253,229,44,231,245,52,219,159,135,62,20,186,82,173,163,195,30,127,138,22,100,63,161,167,251,
175,63,192,53,58,133,117,116,14,142,25,79,70,83,144,127,26,92,215,155,205,224,29,103,195,140,110,188,35,173,76,152,228,217,92,176,40,254,217,251,191,152,31,90,212,240,207,142,215,81,191,58,54,181,106,116,221,101,14,211,19,240,146,159,246,115,208,251,
119,236,77,39,79,75,197,221,5,206,211,39,214,148,19,154,65,205,3,173,102,48,61,107,131,241,215,136,47,100,187,183,240,174,132,115,169,223,143,222,56,56,242,98,61,243,216,145,147,158,192,122,145,93,189,204,241,218,219,205,113,41,196,81,35,72,231,208,1,
147,250,87,159,252,54,180,125,82,227,83,241,109,226,230,230,254,118,72,73,254,8,193,25,199,227,133,250,45,107,77,36,156,159,79,204,76,234,60,49,225,123,15,11,233,107,109,104,161,229,108,25,167,35,230,149,191,160,244,29,171,118,147,181,121,191,136,126,
37,94,104,222,46,151,70,143,78,183,150,56,229,142,49,43,74,193,142,224,167,56,28,127,21,40,198,117,27,182,172,46,145,233,52,81,140,18,61,234,57,238,33,181,129,231,184,149,34,133,6,90,73,24,42,168,247,38,179,25,37,115,94,46,240,141,175,138,52,252,113,
13,244,35,54,215,35,130,167,168,4,143,225,207,229,212,85,109,47,199,218,118,185,226,132,209,180,196,121,227,242,157,222,232,252,171,149,199,10,58,158,189,78,43,173,171,180,169,201,116,98,220,227,188,7,226,107,157,78,27,141,31,87,5,53,141,56,236,152,63,
89,20,113,187,235,216,254,7,189,118,67,173,121,191,142,162,62,27,241,94,141,226,219,117,194,153,5,181,224,95,226,82,58,159,248,14,71,252,4,87,163,169,12,20,131,144,122,31,90,170,145,90,73,108,193,28,223,196,27,147,107,224,93,94,69,36,19,7,151,199,251,
76,20,254,134,167,240,85,178,217,248,47,71,137,70,51,106,174,126,173,243,31,231,80,124,65,183,55,94,4,214,35,80,73,88,60,204,15,246,88,19,250,3,83,248,42,229,110,252,21,164,76,167,63,232,168,135,234,191,41,254,84,127,203,175,152,117,55,171,192,60,115,
255,0,37,70,235,254,190,96,254,73,94,255,0,95,63,248,231,254,74,149,215,253,124,193,252,146,183,193,252,79,208,82,61,39,196,255,0,18,244,141,8,201,111,104,70,161,124,9,30,92,77,242,33,255,0,105,255,0,160,201,250,87,143,120,131,197,58,191,137,103,223,
168,220,150,140,28,164,9,242,198,159,69,238,125,206,77,122,247,137,254,24,233,58,217,146,226,195,26,117,233,36,230,53,253,211,159,246,151,183,212,126,181,227,250,255,0,134,53,111,13,92,249,90,149,177,68,39,9,50,124,209,191,209,191,161,230,186,112,126,
195,167,197,230,76,238,116,63,9,255,0,228,121,139,254,189,165,254,66,189,224,87,131,124,39,255,0,145,230,63,250,246,155,249,10,247,145,210,185,241,255,0,198,249,21,13,142,79,226,101,178,220,248,11,82,221,214,32,146,143,168,113,253,9,173,159,12,92,53,
223,133,116,155,134,57,103,180,136,177,245,59,69,99,124,75,185,75,111,1,106,59,177,153,66,68,190,228,184,254,128,214,199,133,237,205,175,133,116,152,27,33,146,210,32,126,187,65,254,181,206,255,0,132,189,71,212,208,187,183,142,238,214,107,105,134,98,149,
25,28,123,17,131,92,7,195,59,185,52,215,212,252,39,122,113,117,167,206,207,16,63,197,25,60,145,248,224,255,0,192,171,209,15,90,224,188,119,160,223,65,121,7,138,244,53,39,81,179,31,190,140,12,249,209,15,110,248,25,4,119,7,216,81,77,166,156,31,95,204,25,
222,246,175,53,241,7,195,107,237,103,198,18,235,49,106,22,177,197,36,177,200,35,116,98,192,40,94,56,227,248,107,175,240,207,137,172,124,81,165,173,221,163,128,227,2,104,73,249,162,111,67,237,232,123,214,213,40,202,116,219,182,225,107,139,156,146,125,
77,69,115,109,5,229,187,219,220,195,28,208,200,48,241,200,161,149,190,160,212,180,86,99,56,253,39,192,22,26,15,138,87,87,211,101,120,160,242,158,54,181,111,152,2,216,229,79,80,56,232,115,93,133,21,206,120,187,197,182,158,23,211,183,185,18,223,74,8,183,
182,7,151,61,50,71,247,115,249,244,21,119,149,70,175,171,22,199,53,227,201,27,196,62,40,209,124,39,110,114,190,104,185,188,199,240,168,245,255,0,128,238,63,136,175,71,64,0,1,70,0,224,15,106,226,252,5,225,187,171,4,185,214,245,156,190,179,168,157,242,
238,235,18,19,144,190,199,166,71,108,1,218,187,81,214,170,164,150,145,93,1,1,235,69,59,111,61,105,54,251,214,67,56,45,123,192,115,197,169,182,185,225,91,145,167,234,92,179,195,210,41,189,125,134,123,131,193,246,235,85,173,254,37,92,105,50,45,167,139,
116,107,155,9,199,30,124,73,186,55,247,198,127,145,53,232,219,125,233,146,91,69,114,134,41,163,73,35,110,10,72,161,129,252,13,106,170,166,189,245,127,204,86,236,115,182,222,62,240,181,210,6,77,110,213,115,218,82,99,63,147,1,77,187,248,129,225,91,68,44,
250,213,179,227,248,97,204,132,255,0,223,34,167,151,192,254,23,188,125,210,104,86,64,147,201,88,246,255,0,44,82,219,120,39,195,54,100,60,58,29,136,97,208,180,91,241,255,0,125,102,143,221,121,254,1,169,203,77,241,11,83,215,217,173,124,33,162,207,59,30,
13,229,194,225,19,223,29,63,51,248,86,143,134,252,10,108,181,15,237,173,118,236,234,58,195,29,219,223,148,136,255,0,179,158,167,223,24,29,128,174,213,97,72,84,71,26,42,42,140,5,81,128,63,1,75,183,222,147,168,173,104,43,12,15,52,14,180,161,105,118,243,
214,179,3,255,217,0,0 };

const char* restart_jpg = (const char*) temp_binary_data_7;

//================== unmute.jpg ==================
static const unsigned char temp_binary_data_8[] =
{ 255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,77,0,80,3,1,34,0,2,17,1,3,17,1,255,
196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,
37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,
170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,
196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,247,98,78,105,50,125,104,61,104,170,16,100,213,91,253,82,199,75,183,243,239,239,
32,182,139,251,210,184,92,253,51,215,240,174,63,196,158,54,185,58,167,252,35,254,23,183,23,186,185,59,100,147,25,72,61,115,216,145,223,60,15,115,197,67,166,124,52,134,226,127,237,15,20,222,205,171,95,183,37,90,66,35,95,111,82,63,33,237,90,170,105,43,
205,219,243,21,251,22,174,190,43,120,94,222,66,145,220,220,92,145,255,0,60,96,56,255,0,199,177,80,39,197,223,13,179,98,85,191,132,122,189,184,199,232,107,176,179,209,244,237,62,48,150,118,22,176,40,24,196,112,168,253,113,83,201,107,4,203,178,88,34,145,
125,29,3,15,212,81,122,125,159,222,26,153,154,79,139,116,45,112,133,211,245,59,121,100,63,242,200,157,143,255,0,124,182,13,108,231,222,185,29,103,225,207,135,117,101,46,150,98,202,227,168,154,211,228,193,245,219,208,254,85,207,38,175,226,63,135,183,17,
193,174,179,234,186,19,176,72,239,20,102,72,189,1,207,63,129,252,15,106,57,35,47,133,235,216,47,109,207,79,201,245,165,4,230,171,218,94,91,223,218,69,119,105,50,77,111,42,134,73,16,228,48,169,199,90,201,171,12,15,90,227,62,32,120,142,231,75,177,183,210,
180,173,205,171,234,109,229,64,19,239,34,147,130,223,94,112,63,19,218,187,51,201,53,230,254,25,79,248,73,62,37,235,90,228,159,60,26,119,250,37,174,122,3,202,228,126,1,143,252,10,180,166,150,178,125,4,206,151,194,30,21,182,240,198,148,176,174,36,188,148,
6,185,184,199,46,222,128,255,0,116,118,252,250,154,232,232,163,21,13,185,59,177,133,21,195,248,171,226,86,153,160,23,180,178,219,127,168,14,10,35,126,238,51,254,211,14,254,195,244,173,191,8,106,151,90,207,133,52,253,70,241,149,174,39,70,103,40,187,71,
222,32,96,125,5,83,167,56,195,153,173,5,116,110,212,55,54,208,94,218,203,109,115,18,75,4,170,81,227,113,144,192,246,53,53,37,74,25,230,58,83,207,240,247,198,75,162,79,35,62,131,169,182,235,73,28,255,0,169,114,113,130,126,164,3,235,149,62,181,233,227,
173,114,95,17,180,85,213,252,31,118,84,127,164,217,143,180,194,195,168,43,247,135,226,185,253,43,79,194,26,187,107,158,22,211,239,220,131,44,145,109,148,255,0,182,191,43,126,163,63,141,105,83,223,138,159,93,152,145,175,43,236,138,71,3,238,169,111,200,
87,5,240,133,1,240,165,197,193,229,231,189,145,152,250,156,47,255,0,94,187,247,93,234,200,122,48,193,252,107,207,190,19,185,183,210,245,109,42,64,68,214,87,236,25,125,1,24,254,106,104,135,240,229,242,7,185,232,85,225,159,18,117,173,86,219,198,119,246,
144,106,87,113,91,121,113,143,38,57,153,87,5,6,120,7,28,215,185,215,154,120,191,225,165,231,136,60,65,117,170,219,234,54,241,249,168,161,97,146,54,234,170,7,44,61,113,233,90,97,103,8,212,188,246,20,175,109,15,25,21,238,30,26,210,239,111,190,29,104,87,
90,93,235,90,234,54,104,242,67,185,143,149,38,89,178,146,47,117,62,189,71,81,94,61,171,104,186,142,133,122,109,53,43,103,130,81,200,207,42,227,213,79,66,43,216,60,53,165,94,235,95,14,244,27,24,111,126,203,97,34,63,219,76,121,18,200,155,155,8,141,252,
32,244,39,174,43,187,27,36,225,22,158,151,34,59,142,180,215,47,60,124,231,76,180,223,166,218,64,7,246,164,137,40,50,179,100,143,42,34,15,221,56,57,127,78,5,119,234,161,84,40,206,0,199,39,53,205,106,94,20,140,37,165,206,128,98,211,117,27,20,17,219,186,
175,238,222,62,241,72,7,222,83,249,131,205,116,139,144,163,118,55,99,156,116,205,121,115,113,123,108,104,54,226,53,154,218,88,156,101,93,25,72,246,35,21,194,252,33,144,159,7,203,9,57,16,222,72,131,233,133,63,214,187,61,82,241,52,253,38,242,242,67,133,
130,7,144,254,10,77,114,95,9,237,94,15,4,69,52,131,6,230,226,73,126,163,33,127,246,83,85,31,225,203,213,3,220,238,15,90,243,75,185,63,225,13,248,162,47,101,249,52,189,109,54,72,255,0,194,146,228,114,127,28,31,163,26,244,178,57,172,111,19,120,122,219,
196,218,44,218,117,207,202,199,230,134,92,100,198,227,161,254,132,119,6,166,156,148,93,158,204,25,179,69,121,231,132,252,89,113,166,222,15,11,120,160,253,158,254,12,37,189,196,135,229,157,127,132,110,61,253,15,127,173,122,25,162,81,113,118,96,153,75,
84,210,108,53,155,54,180,212,45,99,184,128,243,181,199,32,250,131,212,31,113,77,209,116,152,52,61,34,223,77,182,121,30,24,1,8,100,57,108,18,79,39,241,171,244,84,243,59,91,160,236,20,81,154,231,252,85,226,203,15,11,88,25,110,88,73,114,227,247,22,202,126,
105,15,244,95,127,235,66,78,78,200,54,48,62,38,106,146,189,157,175,134,108,62,125,67,84,145,83,104,254,24,247,119,250,145,249,3,93,158,147,167,197,165,105,86,186,124,31,234,237,226,88,193,245,192,235,248,158,127,26,227,252,21,225,203,249,53,9,188,85,
226,0,78,171,116,63,115,19,12,121,17,145,233,216,227,128,59,15,114,107,188,29,107,74,141,36,160,186,126,98,93,192,245,162,157,183,158,180,109,247,172,134,97,248,139,195,26,103,137,236,254,207,127,6,89,115,229,76,156,73,25,246,62,158,199,131,92,116,118,
190,58,240,103,238,173,2,120,131,74,65,242,163,103,205,69,244,29,255,0,45,195,216,87,166,109,247,164,219,90,70,163,74,207,84,43,30,125,31,197,173,54,19,229,234,186,78,167,97,48,234,173,16,97,250,224,254,148,247,248,187,225,192,49,12,90,132,239,217,82,
0,51,249,154,239,158,53,144,98,69,14,61,24,102,154,182,176,197,204,113,68,135,213,80,15,229,78,244,255,0,151,241,13,79,57,127,21,120,207,196,106,99,208,60,62,218,124,45,199,218,239,120,192,245,25,0,126,65,171,83,195,159,15,224,211,175,127,181,181,155,
166,213,117,118,59,188,233,114,86,51,254,200,61,79,185,233,216,10,237,74,228,243,70,223,122,78,174,150,138,176,88,74,7,90,118,223,122,77,188,245,172,198,127,255,217,0,0 };

const char* unmute_jpg = (const char*) temp_binary_data_8;

//================== AudioGUI.cpp ==================
static const unsigned char temp_binary_data_9[] =
"/*\r\n"
"  ==============================================================================\r\n"
"\r\n"
"    AudioGUI.cpp\r\n"
"    Created: 23 Oct 2025 6:23:40pm\r\n"
"    Author:  Family\r\n"
"\r\n"
"  ==============================================================================\r\n"
"*/\r\n"
"\r\n"
"#include \"AudioGUI.h\"\r\n";

const char* AudioGUI_cpp = (const char*) temp_binary_data_9;

//================== AudioGUI.h ==================
static const unsigned char temp_binary_data_10[] =
"#pragma once\r\n"
"\r\n"
"#include <JuceHeader.h>\r\n"
"\r\n"
"class PlayerGUI : public juce::Component,\r\n"
"    public juce::Button::Listener,\r\n"
"    public juce::Slider::Listener\r\n"
"{\r\n"
"public:\r\n"
"    // Listener interface for communication with parent\r\n"
"    class Listener\r\n"
"    {\r\n"
"    public:\r\n"
"        virtual ~Listener() = default;\r\n"
"\r\n"
"        virtual void loadButtonClicked() = 0;\r\n"
"        virtual void playButtonClicked() = 0;\r\n"
"        virtual void stopButtonClicked() = 0;\r\n"
"        virtual void restartButtonClicked() = 0;\r\n"
"        virtual void loopButtonClicked() = 0;\r\n"
"        virtual void muteButtonClicked() = 0;  // NEW: Mute button\r\n"
"        virtual void volumeChanged(float newVolume) = 0;\r\n"
"    };\r\n"
"\r\n"
"    PlayerGUI();\r\n"
"    ~PlayerGUI() override;\r\n"
"\r\n"
"    // Component overrides\r\n"
"    void paint(juce::Graphics& g) override;\r\n"
"    void resized() override;\r\n"
"\r\n"
"    // Listener overrides\r\n"
"    void buttonClicked(juce::Button* button) override;\r\n"
"    void sliderValueChanged(juce::Slider* slider) override;\r\n"
"\r\n"
"    // Public API methods\r\n"
"    void setListener(Listener* newListener);\r\n"
"    void setLoopState(bool isLooping);\r\n"
"    void setPlaybackState(bool isPlaying);\r\n"
"    void setVolumeLevel(float volume);\r\n"
"    void setMuteState(bool isMuted);  // NEW: Mute state\r\n"
"\r\n"
"private:\r\n"
"    // GUI Elements\r\n"
"    juce::TextButton loadButton{ \"Load File\" };\r\n"
"    juce::TextButton playButton{ \"Play\" };\r\n"
"    juce::TextButton stopButton{ \"Stop\" };\r\n"
"    juce::TextButton restartButton{ \"Restart\" };\r\n"
"    juce::TextButton loopButton{ \"Loop: OFF\" };\r\n"
"    juce::TextButton muteButton{ \"Mute: OFF\" };  // NEW: Mute button\r\n"
"    juce::Slider volumeSlider;\r\n"
"    juce::Label volumeLabel{ \"Volume\" };\r\n"
"\r\n"
"    // Listener for callbacks\r\n"
"    Listener* listener = nullptr;\r\n"
"\r\n"
"    // State\r\n"
"    bool isPlaying = false;\r\n"
"    bool isMuted = false;  // NEW: Mute state\r\n"
"\r\n"
"    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR(PlayerGUI)\r\n"
"};";

const char* AudioGUI_h = (const char*) temp_binary_data_10;

//================== Main.cpp ==================
static const unsigned char temp_binary_data_11[] =
"#include <JuceHeader.h>\r\n"
"#include \"MainComponent.h\"\r\n"
"\r\n"
"class SimpleAudioPlayer : public juce::JUCEApplication\r\n"
"{\r\n"
"public:\r\n"
"    const juce::String getApplicationName() override { return \"Simple Audio Player\"; }\r\n"
"    const juce::String getApplicationVersion() override { return \"1.0\"; }\r\n"
"\r\n"
"    void initialise(const juce::String&) override\r\n"
"    {\r\n"
"        mainWindow = std::make_unique<MainWindow>(getApplicationName());\r\n"
"    }\r\n"
"\r\n"
"    void shutdown() override\r\n"
"    {\r\n"
"        mainWindow = nullptr;\r\n"
"    }\r\n"
"\r\n"
"private:\r\n"
"    class MainWindow : public juce::DocumentWindow\r\n"
"    {\r\n"
"    public:\r\n"
"        MainWindow(juce::String name)\r\n"
"            : DocumentWindow(name,\r\n"
"                juce::Colours::lightblue,\r\n"
"                DocumentWindow::allButtons)\r\n"
"        {\r\n"
"            setUsingNativeTitleBar(true);\r\n"
"            setContentOwned(new MainComponent(), true);\r\n"
"            centreWithSize(800,250);\r\n"
"            setVisible(true);\r\n"
"        }\r\n"
"\r\n"
"        void closeButtonPressed() override\r\n"
"        {\r\n"
"            juce::JUCEApplication::getInstance()->systemRequestedQuit();\r\n"
"        }\r\n"
"    };\r\n"
"\r\n"
"    std::unique_ptr<MainWindow> mainWindow;\r\n"
"};\r\n"
"\r\n"
"START_JUCE_APPLICATION(SimpleAudioPlayer)";

const char* Main_cpp = (const char*) temp_binary_data_11;

//================== MainComponent.cpp ==================
static const unsigned char temp_binary_data_12[] =
"\xef\xbb\xbf#include \"MainComponent.h\"\r\n"
"\r\n"
"MainComponent::MainComponent()\r\n"
"{\r\n"
"    addAndMakeVisible(playerGUI);\r\n"
"    playerGUI.setListener(this);\r\n"
"\r\n"
"    setAudioChannels(0, 2);\r\n"
"    setSize(400, 250);\r\n"
"}\r\n"
"\r\n"
"MainComponent::~MainComponent()\r\n"
"{\r\n"
"    shutdownAudio();\r\n"
"}\r\n"
"\r\n"
"void MainComponent::prepareToPlay(int samplesPerBlockExpected, double sampleRate)\r\n"
"{\r\n"
"    player.prepareToPlay(samplesPerBlockExpected, sampleRate);\r\n"
"}\r\n"
"\r\n"
"void MainComponent::getNextAudioBlock(const juce::AudioSourceChannelInfo& bufferToFill)\r\n"
"{\r\n"
"    player.getNextAudioBlock(bufferToFill);\r\n"
"}\r\n"
"\r\n"
"void MainComponent::releaseResources()\r\n"
"{\r\n"
"    player.releaseResources();\r\n"
"}\r\n"
"\r\n"
"void MainComponent::paint(juce::Graphics& g)\r\n"
"{\r\n"
"    g.fillAll(juce::Colours::darkgrey);\r\n"
"}\r\n"
"\r\n"
"void MainComponent::resized()\r\n"
"{\r\n"
"    playerGUI.setBounds(getLocalBounds());\r\n"
"}\r\n"
"\r\n"
"// === GUI Event Handlers ===\r\n"
"\r\n"
"void MainComponent::playButtonClicked()\r\n"
"{\r\n"
"    if (player.isPlaying())\r\n"
"        player.stop();\r\n"
"    else\r\n"
"        player.play();\r\n"
"\r\n"
"    playerGUI.setPlaybackState(player.isPlaying());\r\n"
"}\r\n"
"\r\n"
"void MainComponent::muteButtonClicked()\r\n"
"{\r\n"
"    toggleMute();\r\n"
"}\r\n"
"\r\n"
"void MainComponent::volumeChanged(float newVolume)\r\n"
"{\r\n"
"    if (!isMuted)\r\n"
"    {\r\n"
"        player.setVolume(newVolume);\r\n"
"        previousVolume = newVolume;\r\n"
"    }\r\n"
"}\r\n"
"\r\n"
"void MainComponent::toggleMute()\r\n"
"{\r\n"
"    isMuted = !isMuted;\r\n"
"    if (isMuted)\r\n"
"    {\r\n"
"        previousVolume = player.getVolume();\r\n"
"        player.setVolume(0.0f);\r\n"
"    }\r\n"
"    else\r\n"
"    {\r\n"
"        player.setVolume(previousVolume);\r\n"
"    }\r\n"
"    playerGUI.setMuteState(isMuted);\r\n"
"}\r\n";

const char* MainComponent_cpp = (const char*) temp_binary_data_12;

//================== MainComponent.h ==================
static const unsigned char temp_binary_data_13[] =
"#pragma once\r\n"
"#include <JuceHeader.h>\r\n"
"#include \"PlayerAudio.h\"\r\n"
"#include \"PlayerGUI.h\"\r\n"
"\r\n"
"class MainComponent : public juce::AudioAppComponent,\r\n"
"    public PlayerGUI::Listener\r\n"
"{\r\n"
"public:\r\n"
"    MainComponent();\r\n"
"    ~MainComponent() override;\r\n"
"\r\n"
"    void prepareToPlay(int samplesPerBlockExpected, double sampleRate) override;\r\n"
"    void getNextAudioBlock(const juce::AudioSourceChannelInfo& bufferToFill) override;\r\n"
"    void releaseResources() override;\r\n"
"    void paint(juce::Graphics&) override;\r\n"
"    void resized() override;\r\n"
"\r\n"
"    // === PlayerGUI listener methods ===\r\n"
"    void playButtonClicked() override;\r\n"
"    void muteButtonClicked() override;\r\n"
"    void volumeChanged(float newVolume) override;\r\n"
"\r\n"
"private:\r\n"
"    void toggleMute();\r\n"
"\r\n"
"    PlayerAudio player;\r\n"
"    PlayerGUI playerGUI;\r\n"
"    bool isMuted = false;\r\n"
"    float previousVolume = 1.0f;\r\n"
"\r\n"
"    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR(MainComponent)\r\n"
"};\r\n";

const char* MainComponent_h = (const char*) temp_binary_data_13;

//================== PlayerAudio.cpp ==================
static const unsigned char temp_binary_data_14[] =
"#include \"PlayerAudio.h\"\r\n"
"PlayerAudio::PlayerAudio()\r\n"
"{\r\n"
"    formatManager.registerBasicFormats();\r\n"
"}\r\n"
"PlayerAudio::~PlayerAudio()\r\n"
"{\r\n"
"    transportSource.setSource(nullptr);\r\n"
"}\r\n"
"void PlayerAudio::loadFile(const juce::File& audioFile)\r\n"
"{\r\n"
"    if (auto* reader = formatManager.createReaderFor(audioFile))\r\n"
"    {\r\n"
"        // Safely stop playback and clear previous source\r\n"
"        transportSource.stop();\r\n"
"        transportSource.setSource(nullptr);\r\n"
"        readerSource.reset();\r\n"
"        readerSource = std::make_unique<juce::AudioFormatReaderSource>(reader, true);\r\n"
"        readerSource->setLooping(isLooping);\r\n"
"        transportSource.setSource(readerSource.get(), 0, nullptr, reader->sampleRate);\r\n"
"    }\r\n"
"}\r\n"
"void PlayerAudio::prepareToPlay(int samplesPerBlockExpected, double sampleRate)\r\n"
"{\r\n"
"    transportSource.prepareToPlay(samplesPerBlockExpected, sampleRate);\r\n"
"}\r\n"
"void PlayerAudio::getNextAudioBlock(const juce::AudioSourceChannelInfo& bufferToFill)\r\n"
"{\r\n"
"    transportSource.getNextAudioBlock(bufferToFill);\r\n"
"}\r\n"
"void PlayerAudio::releaseResources()\r\n"
"{\r\n"
"    transportSource.releaseResources();\r\n"
"}\r\n"
"void PlayerAudio::play()\r\n"
"{\r\n"
"    if (!transportSource.isPlaying())\r\n"
"        transportSource.start();\r\n"
"}\r\n"
"void PlayerAudio::stop()\r\n"
"{\r\n"
"    if (transportSource.isPlaying())\r\n"
"        transportSource.stop();\r\n"
"}\r\n"
"void PlayerAudio::restart()\r\n"
"{\r\n"
"    transportSource.setPosition(0.0);\r\n"
"    transportSource.start();\r\n"
"}\r\n"
"bool PlayerAudio::toggleLooping()\r\n"
"{\r\n"
"    isLooping = !isLooping;\r\n"
"    if (readerSource)\r\n"
"        readerSource->setLooping(isLooping);\r\n"
"    return isLooping;\r\n"
"}\r\n"
"bool PlayerAudio::isPlaying() const\r\n"
"{\r\n"
"    return transportSource.isPlaying();\r\n"
"}\r\n"
"void PlayerAudio::setVolume(float newVolume)\r\n"
"{\r\n"
"    currentVolume = juce::jlimit(0.0f, 1.0f, newVolume);  // clamp for safety\r\n"
"    transportSource.setGain(currentVolume);\r\n"
"}\r\n"
"float PlayerAudio::getVolume() const\r\n"
"{\r\n"
"    return currentVolume;\r\n"
"}\r\n"
"void PlayerAudio::backward(double seconds)\r\n"
"{\r\n"
"    auto newPosition = juce::jmax(0.0, transportSource.getCurrentPosition() - seconds);\r\n"
"    transportSource.setPosition(newPosition);\r\n"
"}\r\n"
"void PlayerAudio::forward(double seconds)\r\n"
"{\r\n"
"    if (readerSource != nullptr)\r\n"
"    {\r\n"
"        auto totalLength = readerSource->getTotalLength() / readerSource->getAudioFormatReader()->sampleRate;\r\n"
"        auto newPosition = juce::jmin(totalLength, transportSource.getCurrentPosition() + seconds);\r\n"
"        transportSource.setPosition(newPosition);\r\n"
"    }\r\n"
"}\r\n"
"void PlayerAudio::goToEnd()\r\n"
"{\r\n"
"    if (readerSource != nullptr)\r\n"
"    {\r\n"
"        double totalLength = transportSource.getLengthInSeconds();\r\n"
"        transportSource.setPosition(juce::jmax(0.0, totalLength - 0.1));\r\n"
"    }\r\n"
"}";

const char* PlayerAudio_cpp = (const char*) temp_binary_data_14;

//================== PlayerAudio.h ==================
static const unsigned char temp_binary_data_15[] =
"#pragma once\r\n"
"#include <JuceHeader.h>\r\n"
"class PlayerAudio\r\n"
"{\r\n"
"public:\r\n"
"    PlayerAudio();\r\n"
"    ~PlayerAudio();\r\n"
"    void loadFile(const juce::File& audioFile);\r\n"
"    void prepareToPlay(int samplesPerBlockExpected, double sampleRate);\r\n"
"    void getNextAudioBlock(const juce::AudioSourceChannelInfo& bufferToFill);\r\n"
"    void releaseResources();\r\n"
"    void play();\r\n"
"    void stop();\r\n"
"    void restart();\r\n"
"    bool toggleLooping();\r\n"
"    bool isPlaying() const;\r\n"
"    void backward(double seconds);\r\n"
"    void forward(double seconds);\r\n"
"    void setVolume(float newVolume);\r\n"
"    float getVolume() const;\r\n"
"    void goToEnd();\r\n"
"private:\r\n"
"    juce::AudioFormatManager formatManager;\r\n"
"    juce::AudioTransportSource transportSource;\r\n"
"    std::unique_ptr<juce::AudioFormatReaderSource> readerSource;\r\n"
"    bool isLooping = false;\r\n"
"    float currentVolume = 1.0f;\r\n"
"};";

const char* PlayerAudio_h = (const char*) temp_binary_data_15;

//================== PlayerGUI.cpp ==================
static const unsigned char temp_binary_data_16[] =
"#include \"PlayerGUI.h\"\r\n"
"\r\n"
"PlayerGUI::PlayerGUI()\r\n"
"{\r\n"
"    loadButtonIcons();\r\n"
"\r\n"
"    // === Add text buttons ===\r\n"
"    for (auto* button : { &loadButton, &stopButton, &restartButton, &forwardButton, &backwardButton, &goToEndButton })\r\n"
"    {\r\n"
"        addAndMakeVisible(button);\r\n"
"        button->addListener(this);\r\n"
"        button->setColour(juce::TextButton::buttonColourId, juce::Colours::purple);\r\n"
"        button->setColour(juce::TextButton::buttonOnColourId, juce::Colours::hotpink);\r\n"
"    }\r\n"
"\r\n"
"    // === Add image buttons ===\r\n"
"    for (auto* button : { &playButton, &muteButton, &loopButton })\r\n"
"    {\r\n"
"        addAndMakeVisible(button);\r\n"
"        button->addListener(this);\r\n"
"        button->setColour(juce::DrawableButton::backgroundColourId, juce::Colours::purple);\r\n"
"        button->setColour(juce::DrawableButton::backgroundOnColourId, juce::Colours::hotpink);\r\n"
"    }\r\n"
"\r\n"
"    // === Volume slider ===\r\n"
"    volumeSlider.setRange(0.0, 1.0, 0.01);\r\n"
"    volumeSlider.setValue(0.5);\r\n"
"    volumeSlider.addListener(this);\r\n"
"    volumeSlider.setTextBoxStyle(juce::Slider::TextBoxRight, false, 60, 20);\r\n"
"    volumeSlider.setColour(juce::Slider::thumbColourId, juce::Colours::purple);\r\n"
"    volumeSlider.setColour(juce::Slider::textBoxBackgroundColourId, juce::Colours::purple);\r\n"
"    addAndMakeVisible(volumeSlider);\r\n"
"\r\n"
"    volumeLabel.setJustificationType(juce::Justification::centredLeft);\r\n"
"    addAndMakeVisible(volumeLabel);\r\n"
"\r\n"
"    setLoopState(false);\r\n"
"    setPlaybackState(false);\r\n"
"    setMuteState(false);\r\n"
"}\r\n"
"\r\n"
"PlayerGUI::~PlayerGUI() = default;\r\n"
"\r\n"
"void PlayerGUI::paint(juce::Graphics& g)\r\n"
"{\r\n"
"    g.fillAll(juce::Colours::silver);\r\n"
"    g.setColour(juce::Colours::purple);\r\n"
"    g.drawRoundedRectangle(getLocalBounds().toFloat().reduced(1.0f), 8.0f, 2.0f);\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::resized()\r\n"
"{\r\n"
"    const int y = 50;\r\n"
"    const int buttonWidth = 80;\r\n"
"    const int buttonHeight = 60;\r\n"
"    const int spacing = 10;\r\n"
"\r\n"
"    int x = 20;\r\n"
"\r\n"
"    // Left side buttons\r\n"
"    loadButton.setBounds(x, y, buttonWidth, buttonHeight);       x += buttonWidth + spacing;\r\n"
"    muteButton.setBounds(x, y, buttonWidth, buttonHeight);       x += buttonWidth + spacing;\r\n"
"    restartButton.setBounds(x, y, buttonWidth, buttonHeight);    x += buttonWidth + spacing;\r\n"
"    backwardButton.setBounds(x, y, buttonWidth, buttonHeight);   x += buttonWidth + spacing;\r\n"
"\r\n"
"    // Play button centered\r\n"
"    playButton.setBounds(x, y, buttonWidth, buttonHeight);       x += buttonWidth + spacing;\r\n"
"\r\n"
"    // Right side buttons\r\n"
"    forwardButton.setBounds(x, y, buttonWidth, buttonHeight);    x += buttonWidth + spacing;\r\n"
"    goToEndButton.setBounds(x, y, buttonWidth, buttonHeight);    x += buttonWidth + spacing;\r\n"
"    loopButton.setBounds(x, y, buttonWidth, buttonHeight);       x += buttonWidth + spacing;\r\n"
"    stopButton.setBounds(x, y, buttonWidth, buttonHeight);\r\n"
"\r\n"
"    // Volume slider below\r\n"
"    volumeSlider.setBounds(20, 140, getWidth() - 40, 30);\r\n"
"    volumeLabel.setBounds(20, 115, 100, 20);\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::buttonClicked(juce::Button* button)\r\n"
"{\r\n"
"    if (!listener) return;\r\n"
"\r\n"
"    if (button == &loadButton)     listener->loadButtonClicked();\r\n"
"    else if (button == &playButton)     listener->playButtonClicked();\r\n"
"    else if (button == &stopButton)     listener->stopButtonClicked();\r\n"
"    else if (button == &restartButton)  listener->restartButtonClicked();\r\n"
"    else if (button == &loopButton)     listener->loopButtonClicked();\r\n"
"    else if (button == &muteButton)     listener->muteButtonClicked();\r\n"
"    else if (button == &forwardButton)  listener->forwardButtonClicked();\r\n"
"    else if (button == &backwardButton) listener->backwardButtonClicked();\r\n"
"    else if (button == &goToEndButton)  listener->goToEndButtonClicked();\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::sliderValueChanged(juce::Slider* slider)\r\n"
"{\r\n"
"    if (slider == &volumeSlider && listener)\r\n"
"        listener->volumeChanged((float)slider->getValue());\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::setListener(Listener* newListener)\r\n"
"{\r\n"
"    listener = newListener;\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::loadButtonIcons()\r\n"
"{\r\n"
"    // Play / Pause\r\n"
"    auto playImg = juce::Drawable::createFromImageData(BinaryData::play_jpg, BinaryData::play_jpgSize);\r\n"
"    auto pauseImg = juce::Drawable::createFromImageData(BinaryData::pause_jpg, BinaryData::pause_jpgSize);\r\n"
"    playButton.setImages(playImg.get(), nullptr, nullptr, nullptr, pauseImg.get());\r\n"
"\r\n"
"    // Mute / Unmute\r\n"
"    auto muteImg = juce::Drawable::createFromImageData(BinaryData::mute_png, BinaryData::mute_pngSize);\r\n"
"    auto unmuteImg = juce::Drawable::createFromImageData(BinaryData::unmute_jpg, BinaryData::unmute_jpgSize);\r\n"
"    muteButton.setImages(unmuteImg.get(), nullptr, nullptr, nullptr, muteImg.get());\r\n"
"\r\n"
"    // Loop (same image, pink toggle)\r\n"
"    auto loopImg = juce::Drawable::createFromImageData(BinaryData::loop_jpg, BinaryData::loop_jpgSize);\r\n"
"    loopButton.setImages(loopImg.get());\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::setLoopState(bool isLoopingNow)\r\n"
"{\r\n"
"    isLooping = isLoopingNow;\r\n"
"    loopButton.setToggleState(isLooping, juce::dontSendNotification);\r\n"
"    loopButton.setColour(juce::DrawableButton::backgroundColourId,\r\n"
"        isLooping ? juce::Colours::hotpink : juce::Colours::purple);\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::setPlaybackState(bool playing)\r\n"
"{\r\n"
"    isPlaying = playing;\r\n"
"    playButton.setToggleState(playing, juce::dontSendNotification);\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::setVolumeLevel(float volume)\r\n"
"{\r\n"
"    volumeSlider.setValue(volume, juce::dontSendNotification);\r\n"
"}\r\n"
"\r\n"
"void PlayerGUI::setMuteState(bool isMutedNow)\r\n"
"{\r\n"
"    isMuted = isMutedNow;\r\n"
"    muteButton.setToggleState(isMuted, juce::dontSendNotification);\r\n"
"}\r\n";

const char* PlayerGUI_cpp = (const char*) temp_binary_data_16;

//================== PlayerGUI.h ==================
static const unsigned char temp_binary_data_17[] =
"#pragma once\r\n"
"#include <JuceHeader.h>\r\n"
"\r\n"
"class PlayerGUI : public juce::Component,\r\n"
"    public juce::Button::Listener,\r\n"
"    public juce::Slider::Listener\r\n"
"{\r\n"
"public:\r\n"
"    class Listener\r\n"
"    {\r\n"
"    public:\r\n"
"        virtual ~Listener() = default;\r\n"
"        virtual void loadButtonClicked() = 0;\r\n"
"        virtual void playButtonClicked() = 0;\r\n"
"        virtual void stopButtonClicked() = 0;\r\n"
"        virtual void restartButtonClicked() = 0;\r\n"
"        virtual void loopButtonClicked() = 0;\r\n"
"        virtual void muteButtonClicked() = 0;\r\n"
"        virtual void volumeChanged(float newVolume) = 0;\r\n"
"        virtual void forwardButtonClicked() = 0;\r\n"
"        virtual void backwardButtonClicked() = 0;\r\n"
"        virtual void goToEndButtonClicked() = 0;\r\n"
"    };\r\n"
"\r\n"
"    PlayerGUI();\r\n"
"    ~PlayerGUI() override;\r\n"
"\r\n"
"    void paint(juce::Graphics& g) override;\r\n"
"    void resized() override;\r\n"
"\r\n"
"    void buttonClicked(juce::Button* button) override;\r\n"
"    void sliderValueChanged(juce::Slider* slider) override;\r\n"
"\r\n"
"    void setListener(Listener* newListener);\r\n"
"\r\n"
"    void setLoopState(bool isLooping);\r\n"
"    void setPlaybackState(bool isPlaying);\r\n"
"    void setVolumeLevel(float volume);\r\n"
"    void setMuteState(bool isMuted);\r\n"
"\r\n"
"private:\r\n"
"   \r\n"
"    juce::DrawableButton playButton{ \"Play\",  juce::DrawableButton::ImageFitted };\r\n"
"    juce::DrawableButton muteButton{ \"Mute\",  juce::DrawableButton::ImageFitted };\r\n"
"    juce::DrawableButton loopButton{ \"Loop\",  juce::DrawableButton::ImageFitted };\r\n"
"     \r\n"
"    juce::TextButton loadButton{ \"Load\" };\r\n"
"    juce::TextButton stopButton{ \"Stop\" };\r\n"
"    juce::TextButton restartButton{ \"Restart\" };\r\n"
"    juce::TextButton forwardButton{ \">> 10s\" };\r\n"
"    juce::TextButton backwardButton{ \"<< 10s\" };\r\n"
"    juce::TextButton goToEndButton{ \"Go to End\" };\r\n"
"\r\n"
"    juce::Slider volumeSlider;\r\n"
"    juce::Label  volumeLabel{ \"Volume\" };\r\n"
"\r\n"
"    Listener* listener = nullptr;\r\n"
"    bool isPlaying = false;\r\n"
"    bool isMuted = false;\r\n"
"    bool isLooping = false;\r\n"
"\r\n"
"    void loadButtonIcons();\r\n"
"\r\n"
"    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR(PlayerGUI)\r\n"
"};\r\n";

const char* PlayerGUI_h = (const char*) temp_binary_data_17;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes);
const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0x50c92568:  numBytes = 2113; return back10_jpg;
        case 0xaac854c6:  numBytes = 2085; return forward10_jpg;
        case 0xadb927ba:  numBytes = 2102; return gotoend_jpg;
        case 0x86939fc6:  numBytes = 2040; return loop_jpg;
        case 0x33c768bb:  numBytes = 2088; return mute_jpg;
        case 0x31750618:  numBytes = 2115; return pause_jpg;
        case 0x70009c56:  numBytes = 2015; return play_jpg;
        case 0x2febc9b1:  numBytes = 2112; return restart_jpg;
        case 0x8ebfce54:  numBytes = 2089; return unmute_jpg;
        case 0x891c9c09:  numBytes = 276; return AudioGUI_cpp;
        case 0xd1ca7c4e:  numBytes = 1874; return AudioGUI_h;
        case 0x035e963d:  numBytes = 1186; return Main_cpp;
        case 0x39024608:  numBytes = 1556; return MainComponent_cpp;
        case 0xe6c09a0d:  numBytes = 925; return MainComponent_h;
        case 0x6a5c5bb9:  numBytes = 2677; return PlayerAudio_cpp;
        case 0xa65667fe:  numBytes = 849; return PlayerAudio_h;
        case 0xab9f865e:  numBytes = 5566; return PlayerGUI_cpp;
        case 0x833df7e3:  numBytes = 2067; return PlayerGUI_h;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "back10_jpg",
    "forward10_jpg",
    "gotoend_jpg",
    "loop_jpg",
    "mute_jpg",
    "pause_jpg",
    "play_jpg",
    "restart_jpg",
    "unmute_jpg",
    "AudioGUI_cpp",
    "AudioGUI_h",
    "Main_cpp",
    "MainComponent_cpp",
    "MainComponent_h",
    "PlayerAudio_cpp",
    "PlayerAudio_h",
    "PlayerGUI_cpp",
    "PlayerGUI_h"
};

const char* originalFilenames[] =
{
    "back10.jpg",
    "forward10.jpg",
    "gotoend.jpg",
    "loop.jpg",
    "mute.jpg",
    "pause.jpg",
    "play.jpg",
    "restart.jpg",
    "unmute.jpg",
    "AudioGUI.cpp",
    "AudioGUI.h",
    "Main.cpp",
    "MainComponent.cpp",
    "MainComponent.h",
    "PlayerAudio.cpp",
    "PlayerAudio.h",
    "PlayerGUI.cpp",
    "PlayerGUI.h"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8);
const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
        if (strcmp (namedResourceList[i], resourceNameUTF8) == 0)
            return originalFilenames[i];

    return nullptr;
}

}
